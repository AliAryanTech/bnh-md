import chalk from 'chalk'
import express from 'express'
import http from 'http'
import sharp from 'sharp'
const app = express()
const httpServer = http.createServer(app)
const io = require('socket.io')(httpServer)
import qrcode from 'qrcode'
global.qr = '';
        
/**
 * Resize image 
 * @param {Buffer} buffer 
 * @param {Number} width 
 * @param {Number} height 
 * @returns {Promise<Buffer>}
 */
 const resizeImage = (buffer, width, height) => {
    if (!Buffer.isBuffer(buffer)) throw 'Input is not a Buffer'
    return new Promise(async (resolve) => {
        sharp(buffer)
            .resize(width, height, { fit: 'contain' })
            .toBuffer()
            .then(resolve)
    })
}

app.get('/', async (req, res, next) => {
    try {
        res.setHeader("content-type", "image/png")
        res.send(await resizeImage(await qrcode.toBuffer(global.qr), 512, 512))
    } catch (error) {
        res.send('err, ' + error.message)
    }
})

const qrPrint = (qr) => {
    app.get('/qr', async (req, res) => {
        res.setHeader("content-type", "image/png")
        res.send(await resizeImage(await qrcode.toBuffer(qr), 512, 512))
    })
}

// Run the serve
const PORT = process.env.PORT || 2000
httpServer.listen(PORT, () => {
    console.log(chalk.green('[BNH] Scan qrcode on port: ') + chalk.yellow(`${PORT}`))
})

module.exports = {
    qrPrint
}
